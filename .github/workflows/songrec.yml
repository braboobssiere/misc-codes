name: Song Recognition
on: workflow_dispatch

jobs:
  recognize:
    runs-on: ubuntu-latest
    outputs:
      results: ${{ steps.songrec.outputs.responses }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common ffmpeg jq
        wget -qO- 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x6888550b2fc77d09' | sudo tee /etc/apt/trusted.gpg.d/songrec.asc
        sudo add-apt-repository ppa:marin-m/songrec -y
        sudo apt-get install -y songrec

    - name: Process audio files
      id: songrec
      run: |
        cd input/songrec
        all_responses=""
        
        for file in *; do
            # Check if file contains audio
            mime_type=$(file --mime-type -b "$file")
            if [[ $mime_type != audio/* ]]; then
                echo "⏭️ Skipping non-audio file: $file (MIME: $mime_type)" >> $GITHUB_STEP_SUMMARY
                continue
            fi

            echo "🔊 Processing audio file: $file" >> $GITHUB_STEP_SUMMARY
            response=$(songrec audio-file-to-recognized-song "$file" || echo '{"error":"no_match"}')
            
            # Extract track URL or show error
            url=$(echo "$response" | jq -r '.track.url // "❌ No match found" | select(. != null)' 2>/dev/null || echo "🛑 Processing error")
            
            # Create summary entry
            echo "### \`$file\`" >> $GITHUB_STEP_SUMMARY
            echo "**MIME Type**: \`$mime_type\`" >> $GITHUB_STEP_SUMMARY
            echo "**Track URL**: $url" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Build JSON output
            entry=$(jq -n \
                --arg fn "$file" \
                --arg url "$url" \
                --arg mime "$mime_type" \
                '{file: $fn, mime_type: $mime, url: $url}')
                
            all_responses="$all_responses$entry,"
        done

        # Set final output
        if [ -n "$all_responses" ]; then
            echo "responses=[${all_responses%,}]" | jq -c '.' > output.json
            echo "results=$(cat output.json)" >> $GITHUB_OUTPUT
        else
            echo "⚠️ No valid audio files found" >> $GITHUB_STEP_SUMMARY
            echo "results=[]" >> $GITHUB_OUTPUT
        fi
