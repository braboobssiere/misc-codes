name: Song Recognition
on: workflow_dispatch

jobs:
  recognize:
    runs-on: ubuntu-latest
    outputs:
      results: ${{ steps.songrec.outputs.responses }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common ffmpeg jq
        wget -qO- 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x6888550b2fc77d09' | sudo tee /etc/apt/trusted.gpg.d/songrec.asc
        sudo add-apt-repository ppa:marin-m/songrec -y
        sudo apt-get install -y songrec

    - name: Process audio files
      id: songrec
      run: |
        cd input/songrec
        all_responses=""
        
        for file in *; do
            # File type validation
            mime_type=$(file --mime-type -b "$file")
            has_audio=false
            
            if [[ $mime_type == audio/* ]]; then
                has_audio=true
            elif [[ $mime_type == video/* ]]; then
                ffmpeg -nostdin -i "$file" -hide_banner 2>&1 | grep -qi 'audio' && has_audio=true
            else
                echo "⏭️ Skipping non-media file: $file (MIME: $mime_type)" >> $GITHUB_STEP_SUMMARY
                continue
            fi

            [[ $has_audio != true ]] && continue

            # Get response
            echo "🔊 Processing [$mime_type]: $file" >> $GITHUB_STEP_SUMMARY
            response=$(songrec audio-file-to-recognized-song "$file" 2>&1 || echo '{"error":"no_match"}')
            
            # Validate JSON
            if ! jq -e . >/dev/null 2>&1 <<< "$response"; then
                response='{"error":"invalid_response"}'
            fi

            # Extract URL directly from response structure
            url=$(jq -r '.track.url // "❌ No match found"' <<< "$response" 2>/dev/null || echo "🛑 Processing error")
            
            # Create minimal JSON output
            entry=$(jq -n \
                --arg fn "$file" \
                --arg url "$url" \
                '{file: $fn, url: $url}')
                
            all_responses+="$entry,"
        done

        # Final output
        if [ -n "$all_responses" ]; then
            echo "results=[${all_responses%,}]" | jq -c '.' > output.json
            echo "results=$(cat output.json)" >> $GITHUB_OUTPUT
        else
            echo "results=[]" >> $GITHUB_OUTPUT
        fi
