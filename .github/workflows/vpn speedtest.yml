name: VPN Speed Test
on:
  workflow_dispatch:
    inputs:
      vpn_enabled:
        description: 'Enable VPN connection'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  speed-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install speedtest-go
        run: |
          go install github.com/showwin/speedtest-go/speedtest@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Get Non-VPN IP
        id: check_nonvpn_ip
        run: |
          NON_VPN_IP=$(curl -s https://api.ipify.org)
          echo "Non-VPN IP: ${NON_VPN_IP}"
          echo "non_vpn_ip=${NON_VPN_IP}" >> $GITHUB_OUTPUT

      - name: VPN Setup
        if: ${{ github.event.inputs.vpn_enabled == 'true' }}
        run: |
          sudo apt-get install -y openvpn openvpn-systemd-resolved
          echo "${{ secrets.OPENVPN_CONFIG }}" > vpnconfig.ovpn

      - name: Connect to VPN
        if: ${{ github.event.inputs.vpn_enabled == 'true' }}
        uses: kota65535/github-openvpn-connect-action@v3
        with:
          config_file: vpnconfig.ovpn
          username: ${{ secrets.OPENVPN_USERNAME }}
          password: ${{ secrets.OPENVPN_PASSWORD }}

      - name: Verify VPN IP
        if: ${{ github.event.inputs.vpn_enabled == 'true' }}
        run: |
          VPN_IP=$(curl -s https://api.ipify.org)
          echo "Current IP: $VPN_IP"
          if [ "$VPN_IP" == "${{ steps.check_nonvpn_ip.outputs.non_vpn_ip }}" ]; then
            echo "VPN connection failed!"
            exit 1
          fi

      - name: Execute Speed Test
        id: speedtest
        run: |
          echo "### Speed Test Results" >> $GITHUB_STEP_SUMMARY
          
          # Run test with monitor mode
          speedtest -m | tee speedtest.log
          
          # Parse metrics using awk
          LATENCY=$(awk -F'[:|]' '/Latency/ {print $2}' speedtest.log | xargs)
          DOWNLOAD=$(awk -F'[:|]' '/Download/ {print $3}' speedtest.log | xargs)
          UPLOAD=$(awk -F'[:|]' '/Upload/ {print $4}' speedtest.log | xargs)

          # Format results
          echo "**Latency:** \`${LATENCY}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Download:** \`${DOWNLOAD}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Upload:** \`${UPLOAD}\`" >> $GITHUB_STEP_SUMMARY
          
          # Set output variables
          echo "latency=${LATENCY}" >> $GITHUB_OUTPUT
          echo "download=${DOWNLOAD}" >> $GITHUB_OUTPUT
          echo "upload=${UPLOAD}" >> $GITHUB_OUTPUT
